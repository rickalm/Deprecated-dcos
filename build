#!/usr/bin/env bash
# vim: set ft=sh:

# Look for keywords in the args
#
for opt in $@; do
  case ${opt} in
    kill) opt_kill=true;;
    nocache) build_opts="${build_opts} -no-cache";;
    push) opt_push=true;;
    *) tag=_${opt};rev=${opt};;
  esac
done

[ -z "${tag}" ] && tag=_dev && rev=dev

# Stop any processes running that look like they are ours, unless we are told not to 'nokill'
#
if [ -n "${opt_kill}" ]; then
  docker ps | grep rickalm.dcos | awk '{print $1}' | xargs -n 1 docker rm
  docker ps | grep rickalm.centos | awk '{print $1}' | xargs -n 1 docker rm
  docker ps -a -q | xargs docker rm
fi

# Pull/Build the Centos containers, in a subdirectory because its tied to another git repo
#
if [ -d centos7 -a -f centos7/build.sh ]; then
  pushd centos7; bash build.sh ${rev}; popd
fi

# Build our base containers
#
cp Dockerfile.dcos:1.7_base MyDocker
sed -i MyDocker -e "s~FROM .*~FROM rickalm/centos7:base-${rev}~" &&
docker build ${build_opts} -f MyDocker -t rickalm/dcos:1.7_base-${rev} . || exit 1
rm MyDocker

# Build the Master/Slave containers based on base
#
cp Dockerfile.dcos:1.7_aws_master MyDocker
sed -i MyDocker -e "s~FROM .*~FROM rickalm/dcos:1.7_base-${rev}~" &&
docker build ${build_opts} -f MyDocker -t rickalm/dcos:1.7_aws_master-${rev} . || exit 1
rm MyDocker

cp Dockerfile.dcos:1.7_aws_slave MyDocker
sed -i MyDocker -e "s~FROM .*~FROM rickalm/dcos:1.7_base-${rev}~" &&
docker build ${build_opts} -f MyDocker -t rickalm/dcos:1.7_aws_slave-${rev} . || exit 1
rm MyDocker

# If we are pushing, then do so
#
[ -n "${opt_push}" ] && docker push rickalm/dcos:1.7_aws_master-${rev} || exit 1
[ -n "${opt_push}" ] && docker push rickalm/dcos:1.7_aws_slave-${rev} || exit 1

# Clean up our left over images (e.g. tagged <none>) to free disk space
#
docker images | grep none | awk '{print $3}' | xargs docker rmi
